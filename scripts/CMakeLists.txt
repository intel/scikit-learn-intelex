#===============================================================================
# Copyright 2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

cmake_minimum_required(VERSION 3.13 FATAL_ERROR)

project("oneDAL python interface"
    LANGUAGES CXX
    HOMEPAGE_URL https://github.com/oneapi-src/oneDAL
)

set(CMAKE_BUILD_TYPE Release)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(WIN32)
    set(SDL_FLAGS "-GS -DynamicBase")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHsc /MD")
elseif(UNIX)
    set(SDL_FLAGS "-fstack-protector-strong -fPIC -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -fno-strict-overflow -fno-delete-null-pointer-checks")
    if(APPLE)
        set(ONEDAL_PY_LINK_OPTIONS "-fwrapv")
        set(CMAKE_INSTALL_RPATH "@loader_path/../../../")
    else()
        set(ONEDAL_PY_LINK_OPTIONS "-Wl,-z,noexecstack,-z,relro,-z,now,-fstack-protector-strong,-fno-strict-overflow,-fno-delete-null-pointer-checks,-fwrapv")
        set(CMAKE_INSTALL_RPATH "$ORIGIN/../../../")
    endif()
    set(WARNING_FLAGS "-Winit-self")
else()
    message(FATAL_ERROR "Unsupported system.")
endif()

set(CMAKE_BUILD_WITH_INSTALL_RPATH ON)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${WARNING_FLAGS} ${SDL_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_FLAGS} ${SDL_FLAGS}")

set(PYTHON_ONEDAL "${CMAKE_CURRENT_SOURCE_DIR}/../onedal/")

file(GLOB_RECURSE sources
    ${PYTHON_ONEDAL}/**/*.cpp
    ${PYTHON_ONEDAL}/*.cpp
)

message(STATUS "${CMAKE_CURRENT_SOURCE_DIR}")

# find_package(oneDAL REQUIRED)
message(STATUS "oneDAL_INCLUDE_DIRS:" ${oneDAL_INCLUDE_DIRS})
message(STATUS "oneDAL_LIBRARY_DIR:" ${oneDAL_LIBRARY_DIR})
message(STATUS "PYTHON_INCLUDE_DIR:" ${PYTHON_INCLUDE_DIR})
message(STATUS "PYTHON_LIBRARY_DIR:" ${PYTHON_LIBRARY_DIR})
message(STATUS "NUMPY_INCLUDE_DIRS:" ${NUMPY_INCLUDE_DIRS})

if(ONEDAL_DIST_SPMD)
message(STATUS "MPI_INCLUDE_DIRS:" ${MPI_INCLUDE_DIRS})
message(STATUS "MPI_LIBRARY_DIR:" ${MPI_LIBRARY_DIR})
message(STATUS "DPCTL_INCLUDE_DIR:" ${DPCTL_INCLUDE_DIR})
endif()

find_package(pybind11 REQUIRED)

if(IFACE STREQUAL "host")
    set(TARGET "_onedal_py_host")

    if(WIN32)
        set(ONEDAL_LIBRARIES "onedal_dll.${ONEDAL_MAJOR_BINARY}" "onedal_core_dll.${ONEDAL_MAJOR_BINARY}")
    elseif(APPLE)
        set(ONEDAL_LIBRARIES "onedal.${ONEDAL_MAJOR_BINARY}" "onedal_core.${ONEDAL_MAJOR_BINARY}" "onedal_thread.${ONEDAL_MAJOR_BINARY}")
    else()
        set(ONEDAL_LIBRARIES "-l:libonedal.so.${ONEDAL_MAJOR_BINARY}" "-l:libonedal_core.so.${ONEDAL_MAJOR_BINARY}" "-l:libonedal_thread.so.${ONEDAL_MAJOR_BINARY}")
    endif()

    list(APPEND COMPILE_DEFINITIONS "NPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION")

elseif(IFACE STREQUAL "dpc")
    set(TARGET "_onedal_py_dpc")

    if(CMAKE_CXX_COMPILER MATCHES ".*icpx" OR CMAKE_CXX_COMPILER MATCHES ".*icx")
        set(CMAKE_CXX_FLAGS "-fsycl ${CMAKE_CXX_FLAGS}")
    endif()
    
    if(CMAKE_C_COMPILER MATCHES ".*icx")
        set(CMAKE_C_FLAGS "-fsycl ${CMAKE_C_FLAGS}")
    endif()

    if(WIN32)
        set(ONEDAL_LIBRARIES "onedal_dpc_dll.${ONEDAL_MAJOR_BINARY}" "onedal_core_dll.${ONEDAL_MAJOR_BINARY}")
    elseif(APPLE)
        set(ONEDAL_LIBRARIES "onedal_dpc.${ONEDAL_MAJOR_BINARY}" "onedal_core.${ONEDAL_MAJOR_BINARY}" "onedal_thread.${ONEDAL_MAJOR_BINARY}")
    else()
        set(ONEDAL_LIBRARIES "-l:libonedal_dpc.so.${ONEDAL_MAJOR_BINARY}" "-l:libonedal_core.so.${ONEDAL_MAJOR_BINARY}" "-l:libonedal_thread.so.${ONEDAL_MAJOR_BINARY}")
    endif()
    if(ONEDAL_DIST_SPMD)
        set(MPI_LIBRARY ${MPI_LIBS})
    endif()

    list(APPEND COMPILE_DEFINITIONS
        "ONEDAL_DATA_PARALLEL"
        "NPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION")
    if(ONEDAL_DIST_SPMD)
        list(APPEND COMPILE_DEFINITIONS
             "ONEDAL_DATA_PARALLEL_SPMD")
    endif()
else()
    message(FATAL_ERROR "Invalid IFACE value: " ${IFACE})
endif()

pybind11_add_module(${TARGET} ${sources})

if(ONEDAL_DIST_SPMD)
target_include_directories(${TARGET}
    PRIVATE ${PYTHON_ONEDAL}../
    PRIVATE ${oneDAL_INCLUDE_DIRS}
    PRIVATE ${MPI_INCLUDE_DIRS}
    PRIVATE ${PYTHON_INCLUDE_DIR}
    PRIVATE ${DPCTL_INCLUDE_DIR}
    PRIVATE ${NUMPY_INCLUDE_DIRS}
)
else()
target_include_directories(${TARGET}
    PRIVATE ${PYTHON_ONEDAL}../
    PRIVATE ${oneDAL_INCLUDE_DIRS}
    PRIVATE ${PYTHON_INCLUDE_DIR}
    PRIVATE ${NUMPY_INCLUDE_DIRS}
)
endif()

target_compile_definitions(${TARGET} PUBLIC ${COMPILE_DEFINITIONS})
if(ONEDAL_DIST_SPMD)
target_link_directories(${TARGET} PRIVATE ${PYTHON_LIBRARY_DIR} ${oneDAL_LIBRARY_DIR} ${MPI_LIBRARY_DIR})
target_link_libraries(${TARGET} PUBLIC ${ONEDAL_LIBRARIES} ${MPI_LIBRARY})
else()
target_link_directories(${TARGET} PRIVATE ${PYTHON_LIBRARY_DIR} ${oneDAL_LIBRARY_DIR})
target_link_libraries(${TARGET} PUBLIC ${ONEDAL_LIBRARIES})
endif()
target_link_options(${TARGET} PRIVATE ${ONEDAL_PY_LINK_OPTIONS})

install(
  TARGETS ${TARGET}
  LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}
  RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}
)
