#===============================================================================
# Copyright 2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

variables:
  DESCRIPTION: ReleaseTesting
  DESELECT: --deselect ::test_svc_clone_with_callable_kernel --deselect ::test_precomputed
  TEST_COMMAND: python -m sklearnex -m pytest -ra --disable-warnings --pyargs sklearn.svm.tests.test_svm $(DESELECT)

jobs:
- job: GeneratorPyPi
  steps:
  - bash: python .ci/scripts/gen_release_jobs.py
    name: mtrx
- job: ReleasePyPi
  dependsOn: GeneratorPyPi
  strategy:
    matrix: $[ dependencies.generator.outputs['mtrx.legs'] ]
  pool:
    vmImage: $(imageName)
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'
  - script: |
      pip install scikit-learn-intelex pandas pytest
    displayName: 'Install scikit-learn-intelex'
  - script: |
      python -c "import sklearnex"
    displayName: 'Testing of import'
  - script: |
      $(TEST_COMMAND)
    displayName: 'Testing of scikit-learn-intelex'

# - job: Generator
#   steps:
#   - script: 
# - job: ReleaseConda
  # strategy:
  #   matrix:
  #     main - ubuntu - python39:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.9'
  #       conda.channel: 'main'
  #       conda.activate: 'conda activate'
  #     main - ubuntu - python38:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.8'
  #       conda.channel: 'main'
  #       conda.activate: 'conda activate'
  #     main - ubuntu - python37:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.7'
  #       conda.channel: 'main'
  #       conda.activate: 'conda activate'
  #     main - ubuntu - python36:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.6'
  #       conda.channel: 'main'
  #       conda.activate: 'conda activate'
  #     main - mac - python39:
  #       imageName: 'macos-latest'
  #       python.version: '3.9'
  #       conda.channel: 'main'
  #       conda.activate: 'source activate'
  #     main - mac - python38:
  #       imageName: 'macos-latest'
  #       python.version: '3.8'
  #       conda.channel: 'main'
  #       conda.activate: 'source activate'
  #     main - mac - python37:
  #       imageName: 'macos-latest'
  #       python.version: '3.7'
  #       conda.channel: 'main'
  #       conda.activate: 'source activate'
  #     main - mac - python36:
  #       imageName: 'macos-latest'
  #       python.version: '3.6'
  #       conda.channel: 'main'
  #       conda.activate: 'source activate'
  #     main - windows - python39:
  #       imageName: 'windows-latest'
  #       python.version: '3.9'
  #       conda.channel: 'main'
  #       conda.activate: 'call activate'
  #     main - windows - python38:
  #       imageName: 'windows-latest'
  #       python.version: '3.8'
  #       conda.channel: 'main'
  #       conda.activate: 'call activate'
  #     main - windows - python37:
  #       imageName: 'windows-latest'
  #       python.version: '3.7'
  #       conda.channel: 'main'
  #       conda.activate: 'call activate'
  #     main - windows - python36:
  #       imageName: 'windows-latest'
  #       python.version: '3.6'
  #       conda.channel: 'main'
  #       conda.activate: 'call activate'
  #     forge - ubuntu - python39:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.9'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'conda activate'
  #     forge - ubuntu - python38:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.8'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'conda activate'
  #     forge - ubuntu - python37:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.7'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'conda activate'
  #     forge - ubuntu - python36:
  #       imageName: 'ubuntu-latest'
  #       python.version: '3.6'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'conda activate'
  #     forge - mac - python39:
  #       imageName: 'macos-latest'
  #       python.version: '3.9'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'source activate'
  #     forge - mac - python38:
  #       imageName: 'macos-latest'
  #       python.version: '3.8'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'source activate'
  #     forge - mac - python37:
  #       imageName: 'macos-latest'
  #       python.version: '3.7'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'source activate'
  #     forge - mac - python36:
  #       imageName: 'macos-latest'
  #       python.version: '3.6'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'source activate'
  #     forge - windows - python39:
  #       imageName: 'windows-latest'
  #       python.version: '3.9'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'call activate'
  #     forge - windows - python38:
  #       imageName: 'windows-latest'
  #       python.version: '3.8'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'call activate'
  #     forge - windows - python37:
  #       imageName: 'windows-latest'
  #       python.version: '3.7'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'call activate'
  #     forge - windows - python36:
  #       imageName: 'windows-latest'
  #       python.version: '3.6'
  #       conda.channel: 'conda-forge'
  #       conda.activate: 'call activate'
  # pool:
  #   vmImage: $(imageName)
  # steps:
  # - task: UsePythonVersion@0
  #   displayName: 'Use Python $(python.version)'
  #   inputs:
  #     versionSpec: '$(python.version)'
  # - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
  #   condition: eq( variables['Agent.OS'], 'Windows_NT' )
  #   displayName: Add conda to PATH
  # - script: |
  #     echo "##vso[task.prependpath]$CONDA/bin"
  #     sudo chown -R $USER $CONDA
  #   condition: eq( variables['Agent.OS'], 'Darwin')
  #   displayName: Add sudo access
  # - script: |
  #     conda update -y -q conda
  #     conda create -y -q -n CB -c $(conda.channel) python=$(python.version) scikit-learn-intelex pandas pytest
  #   displayName: 'Install scikit-learn-intelex'
  # - script: |
  #     . /usr/share/miniconda/etc/profile.d/conda.sh
  #     $(conda.activate) CB
  #     python -c "import sklearnex"
  #   displayName: 'Testing of import'
  # - script: |
  #     . /usr/share/miniconda/etc/profile.d/conda.sh
  #     $(conda.activate) CB
  #     $(TEST_COMMAND)
  #   displayName: 'Testing of scikit-learn-intelex'
